/*  Made For 
 *  DHT11 & MQ135
 *  for NodeMCU(1.0)
 *  
 */ 

#include <DHT.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

//DHT definations
#define DHTPIN 5 //#D1 on NodeMCu
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
float temp,hum = 0;

//MQ135 definations
#define anInput     A0 
#define digTrigger   2  
#define co2Zero     150  

// wifi coding
WiFiClient client;
String thingSpeakAddress= "http://api.thingspeak.com/update?";
String writeAPIKey;
String tsfield1Name;
String request_string;
HTTPClient http;

//IFTTT coding
String MakerIFTTT_Key ;
String MakerIFTTT_Event;
char *append_str(char *here, String s) {  int i=0; while (*here++ = s[i]){i++;};return here-1;}
char *append_ul(char *here, unsigned long u) { char buf[20]; return append_str(here, ultoa(u, buf, 10));}
char post_rqst[256];char *p;char *content_length_here;char *json_start;int compi;

int i=0;
int output_value;
String humidity;
String temperature;
String airquality;

void setup() {

Serial.begin(9600);
//  Initiate the sensors
dht.begin();
pinMode(anInput,INPUT);                     
pinMode(digTrigger,INPUT);  
Serial.println("Setup is running");
//  Initiate the WiFi
WiFi.disconnect();
WiFi.begin("Sandeep","9560919975");
Serial.println();
Serial.println();
Serial.print("Connecting To The WIFI : ");
while ((!(WiFi.status() == WL_CONNECTED)))
{
 delay(300);
 Serial.print(".");
  }
Serial.println("Connected");
Serial.println("Your IP is");
Serial.println((WiFi.localIP().toString()));
Serial.println("Continue");
delay(500);
Serial.println("Loop is going to start");
delay(2000);
Serial.println("Reading From the Sensor ...");
}

void loop() {
  
Serial.println("########    MAJOR_PROJECT    #####");
// Reading the DHT11
temp = (dht.readTemperature( ));
hum = (dht.readHumidity( )) ;
Serial.print("Temperature = ");
Serial.print(temp);
Serial.print("   Humidity = ");
Serial.println(hum);
// Reading the MQ135
int co2now[10];                              
int co2raw = 0;                              
int co2comp = 0;                           
int co2ppm = 0;                              
int zzz = 0;                               
for (int x = 0;x<10;x++){                   
    co2now[x]=analogRead(A0);
    delay(200);
  }
for (int x = 0;x<10;x++){                 
    zzz=zzz + co2now[x];
  }
co2raw = zzz/10;                            
co2comp = co2raw - co2Zero;                 
co2ppm = map(co2comp,0,1023,400,5000);      
Serial.print("Air Quality = ");
Serial.println(co2ppm);
temperature = temp;
humidity = hum; 
airquality = co2ppm;

if (client.connect("api.thingspeak.com",80)) 
{   request_string = thingSpeakAddress;
    request_string += "key=";
    request_string += "BXCYPA7RLCRY3VQN";
    request_string += "&";
    request_string += "field1";
    request_string += "=";
    request_string += temp ;
    http.begin(request_string);
    http.GET();
    http.end();
    Serial.println("<-Sending TEMP-> ");
    }
for(i=0;i<16;i++){
   delay(1000);
   Serial.print("#");
  }  
Serial.println();  
if (client.connect("api.thingspeak.com",80)) 
{   request_string = thingSpeakAddress;
    request_string += "key=";
    request_string += "BXCYPA7RLCRY3VQN";
    request_string += "&";
    request_string += "field2";
    request_string += "=";
    request_string += hum ;
    http.begin(request_string);
    http.GET();
    http.end();
    Serial.println("<-Sending H2_O->");
    }
for(i=0;i<16;i++){
   delay(1000);
   Serial.print("#");
  }
if (client.connect("api.thingspeak.com",80)) 
{   request_string = thingSpeakAddress;
    request_string += "key=";
    request_string += "BXCYPA7RLCRY3VQN";
    request_string += "&";
    request_string += "field3";
    request_string += "=";
    request_string += co2ppm ;
    http.begin(request_string);
    http.GET();
    http.end();
    Serial.println("<-Sending AIRQ->");
    }
for(i=0;i<16;i++){
   delay(1000);
   Serial.print("#");
  }
if (client.connect("maker.ifttt.com",80)) {
      //this key would be provided by IFTTT for google sheets
      MakerIFTTT_Key ="cUKUarn5omQHGaADK2IOb6";
      MakerIFTTT_Event ="Data_received";
      p = post_rqst;
      p = append_str(p, "POST /trigger/");
      p = append_str(p, MakerIFTTT_Event);
      p = append_str(p, "/with/key/");
      p = append_str(p, MakerIFTTT_Key);
      p = append_str(p, " HTTP/1.1\r\n");
      p = append_str(p, "Host: maker.ifttt.com\r\n");
      p = append_str(p, "Content-Type: application/json\r\n");
      p = append_str(p, "Content-Length: ");
      content_length_here = p;
      p = append_str(p, "NN\r\n");
      p = append_str(p, "\r\n");
      json_start = p;
      p = append_str(p, "{\"value1\":\"");
      p = append_str(p, temperature);
      p = append_str(p, "\",\"value2\":\"");
      p = append_str(p, humidity);
      p = append_str(p, "\",\"value3\":\"");
      p = append_str(p, airquality);
      p = append_str(p, "\"}");

      compi= strlen(json_start);
      content_length_here[0] = '0' + (compi/10);
      content_length_here[1] = '0' + (compi%10);
      client.print(post_rqst);
    }
Serial.println();
Serial.println("Sheet updated");  
Serial.println();
}
